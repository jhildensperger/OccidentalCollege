/*
	OxyWeatherStationExample.m
	Provides example and test runs the service's proxy methods.
	Generated by SudzC.com
*/
#import "OxyWeatherStationExample.h"
#import "OxyWeatherStation.h"

@implementation OxyWeatherStationExample

- (void)run {
	// Create the service
	OxyWeatherStation* service = [OxyWeatherStation service];
	service.logging = YES;
	// service.username = @"username";
	// service.password = @"password";
	

	// Returns double. 
	[service getHumidity:self action:@selector(getHumidityHandler:)];

	// Returns NSDate*. 
	[service getLastUpdate:self action:@selector(getLastUpdateHandler:)];

	// Returns double. 
	[service getPressureInHgInches:self action:@selector(getPressureInHgInchesHandler:)];

	// Returns double. 
	[service getPressureInMilliBar:self action:@selector(getPressureInMilliBarHandler:)];

	// Returns double. 
	[service getRainInInches:self action:@selector(getRainInInchesHandler:)];

	// Returns double. 
	[service getRainInMillimeter:self action:@selector(getRainInMillimeterHandler:)];

	// Returns double. 
	[service getSolarIntensityInWattsPerSqFeet:self action:@selector(getSolarIntensityInWattsPerSqFeetHandler:)];

	// Returns double. 
	[service getSolarIntensityInWattsPerSqMeter:self action:@selector(getSolarIntensityInWattsPerSqMeterHandler:)];

	// Returns double. 
	[service getTemperatureInCelsius:self action:@selector(getTemperatureInCelsiusHandler:)];

	// Returns double. 
	[service getTemperatureInFahrenheit:self action:@selector(getTemperatureInFahrenheitHandler:)];

	// Returns double. 
	[service getWindDirection:self action:@selector(getWindDirectionHandler:)];

	// Returns double. 
	[service getWindSpeedInKmPerHour:self action:@selector(getWindSpeedInKmPerHourHandler:)];

	// Returns double. 
	[service getWindSpeedInMiPerHour:self action:@selector(getWindSpeedInMiPerHourHandler:)];
}

	

// Handle the response from getHumidity.
		
- (void) getHumidityHandler: (double) value {
			

	// Do something with the double result
		
	NSLog(@"getHumidity has been run %f",value);
			
}
	

// Handle the response from getLastUpdate.
		
- (void) getLastUpdateHandler: (id) value {

	// Handle errors
	if([value isKindOfClass:[NSError class]]) {
		NSLog(@"%@", value);
		return;
	}

	// Handle faults
	if([value isKindOfClass:[SoapFault class]]) {
		NSLog(@"%@", value);
		return;
	}				
			

	// Do something with the NSDate* result
		NSDate* result = (NSDate*)value;
	NSLog(@"getLastUpdate returned the value: %@", result);
			
}
	

// Handle the response from getPressureInHgInches.
		
- (void) getPressureInHgInchesHandler: (double) value {
			

	// Do something with the double result
		
	NSLog(@"getPressureInHgInches has been run");
			
}
	

// Handle the response from getPressureInMilliBar.
		
- (void) getPressureInMilliBarHandler: (double) value {
			

	// Do something with the double result
		
	NSLog(@"getPressureInMilliBar has been run");
			
}
	

// Handle the response from getRainInInches.
		
- (void) getRainInInchesHandler: (double) value {
			

	// Do something with the double result
		
	NSLog(@"getRainInInches has been run");
			
}
	

// Handle the response from getRainInMillimeter.
		
- (void) getRainInMillimeterHandler: (double) value {
			

	// Do something with the double result
		
	NSLog(@"getRainInMillimeter has been run");
			
}
	

// Handle the response from getSolarIntensityInWattsPerSqFeet.
		
- (void) getSolarIntensityInWattsPerSqFeetHandler: (double) value {
			

	// Do something with the double result
		
	NSLog(@"getSolarIntensityInWattsPerSqFeet has been run");
			
}
	

// Handle the response from getSolarIntensityInWattsPerSqMeter.
		
- (void) getSolarIntensityInWattsPerSqMeterHandler: (double) value {
			

	// Do something with the double result
		
	NSLog(@"getSolarIntensityInWattsPerSqMeter has been run");
			
}
	

// Handle the response from getTemperatureInCelsius.
		
- (void) getTemperatureInCelsiusHandler: (double) value {
			

	// Do something with the double result
		
	NSLog(@"getTemperatureInCelsius has been run");
			
}
	

// Handle the response from getTemperatureInFahrenheit.
		
- (void) getTemperatureInFahrenheitHandler: (double) value {
			

	// Do something with the double result
		
	NSLog(@"getTemperatureInFahrenheit has been run");
			
}
	

// Handle the response from getWindDirection.
		
- (void) getWindDirectionHandler: (double) value {
			

	// Do something with the double result
		
	NSLog(@"getWindDirection has been run");
			
}
	

// Handle the response from getWindSpeedInKmPerHour.
		
- (void) getWindSpeedInKmPerHourHandler: (double) value {
			

	// Do something with the double result
		
	NSLog(@"getWindSpeedInKmPerHour has been run");
			
}
	

// Handle the response from getWindSpeedInMiPerHour.
		
- (void) getWindSpeedInMiPerHourHandler: (double) value {
			

	// Do something with the double result
		
	NSLog(@"getWindSpeedInMiPerHour has been run");
			
}
	

@end
		